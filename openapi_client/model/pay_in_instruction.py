# coding: utf-8

"""
    BVNK API Endpoints

    The BVNK API is designed to facilitate seamless and secure transactions including payments, channels, anddigital wallet transactions.  # noqa: E501

    The version of the OpenAPI document: 1.0.1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from openapi_client import schemas  # noqa: F401


class PayInInstruction(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            
            
            class action(
                schemas.EnumBase,
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    enum_value_to_name = {
                        "REDIRECT": "REDIRECT",
                        "FORM": "FORM",
                        "DISPLAY": "DISPLAY",
                        "NONE": "NONE",
                    }
                
                @schemas.classproperty
                def REDIRECT(cls):
                    return cls("REDIRECT")
                
                @schemas.classproperty
                def FORM(cls):
                    return cls("FORM")
                
                @schemas.classproperty
                def DISPLAY(cls):
                    return cls("DISPLAY")
                
                @schemas.classproperty
                def NONE(cls):
                    return cls("NONE")
        
            @staticmethod
            def form() -> typing.Type['Form']:
                return Form
            redirectUrl = schemas.StrSchema
            displayParameters = schemas.DictSchema
            __annotations__ = {
                "action": action,
                "form": form,
                "redirectUrl": redirectUrl,
                "displayParameters": displayParameters,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["action"]) -> MetaOapg.properties.action: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["form"]) -> 'Form': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["redirectUrl"]) -> MetaOapg.properties.redirectUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayParameters"]) -> MetaOapg.properties.displayParameters: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["action", "form", "redirectUrl", "displayParameters", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["action"]) -> typing.Union[MetaOapg.properties.action, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["form"]) -> typing.Union['Form', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["redirectUrl"]) -> typing.Union[MetaOapg.properties.redirectUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayParameters"]) -> typing.Union[MetaOapg.properties.displayParameters, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["action", "form", "redirectUrl", "displayParameters", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        action: typing.Union[MetaOapg.properties.action, str, schemas.Unset] = schemas.unset,
        form: typing.Union['Form', schemas.Unset] = schemas.unset,
        redirectUrl: typing.Union[MetaOapg.properties.redirectUrl, str, schemas.Unset] = schemas.unset,
        displayParameters: typing.Union[MetaOapg.properties.displayParameters, dict, frozendict.frozendict, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PayInInstruction':
        return super().__new__(
            cls,
            *_args,
            action=action,
            form=form,
            redirectUrl=redirectUrl,
            displayParameters=displayParameters,
            _configuration=_configuration,
            **kwargs,
        )

from openapi_client.model.form import Form
